import{e as defineComponent,c as computed,f as openBlock,g as createElementBlock,n as normalizeClass,j as renderSlot,k as createTextVNode,t as toDisplayString,p as createBlock,w as withCtx,H as withModifiers,z as resolveDynamicComponent,F as Fragment,C as renderList,x as createVNode,q as mergeProps,u as unref,r as ref,s as normalizeProps,v as guardReactiveProps}from"./vue.esm-bundler-9Sp9mUIa.js";import{_ as _sfc_main$3}from"./Button-qksd494o.js";import{a as sizeProps}from"./index-qdh7nOqK.js";import{a as variantProps}from"./index-1yzFFGkY.js";import{u as useBootstrapEmits}from"./index-KFo7FWFz.js";import{u as useBootstrapInstance}from"./index-zvkWswev.js";const dropdownItemsProps={items:{type:Array,default:()=>[]}},dropdownItemProps={itemClass:{type:[String,Array,Object],default:void 0}},_sfc_main$2=defineComponent({__name:"DropdownMenuItem",props:{active:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},divider:{type:Boolean,default:!1},...dropdownItemProps,header:{type:Boolean,default:!1},href:{type:String,default:"#"},is:{type:String,default:void 0},label:{type:String,default:void 0},to:{type:[Object,String],default:void 0}},setup(__props){const props=__props,is=computed(()=>props.is?props.is:props.to?"RouterLink":"a");return(_ctx,_cache)=>(openBlock(),createElementBlock("li",null,[__props.divider?(openBlock(),createElementBlock("hr",{key:0,class:normalizeClass(["dropdown-divider",_ctx.itemClass])},null,2)):__props.header?(openBlock(),createElementBlock("h6",{key:1,class:normalizeClass(["dropdown-header",_ctx.itemClass])},[renderSlot(_ctx.$slots,"default",{},()=>[createTextVNode(toDisplayString(__props.label),1)])],2)):(openBlock(),createBlock(resolveDynamicComponent(is.value),{key:2,class:normalizeClass(["dropdown-item",[{active:__props.active,disabled:__props.disabled},_ctx.itemClass]]),href:__props.href,to:__props.to,onClick:_cache[0]||(_cache[0]=withModifiers(()=>{},["prevent"]))},{default:withCtx(()=>[renderSlot(_ctx.$slots,"default",{},()=>[createTextVNode(toDisplayString(__props.label),1)])]),_:3},8,["class","href","to"]))]))}});_sfc_main$2.__docgenInfo={exportName:"default",displayName:"DropdownMenuItem",docsBlocks:['```vue\n<DropdownMenuItem label="Menu item" />\n```'],description:"",tags:{},props:[{name:"active",description:"Adds the `active` class",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"disabled",description:"Adds the `disabled` class",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"divider",description:"Displays a divider",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"header",description:"Displays label as header",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"href",type:{name:"string"},defaultValue:{func:!1,value:"'#'"}},{name:"is",type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"label",description:"The label to display",type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"to",type:{name:"string|Record<string, unknown>"},defaultValue:{func:!1,value:"undefined"}}],slots:[{name:"default",description:"Displays content inside the dropdown menu item."}],sourceFiles:["/home/runner/work/bootstrap-vue/bootstrap-vue/src/components/DropdownMenuItem/DropdownMenuItem.vue"]};const _hoisted_1={class:"dropdown-menu"},_sfc_main$1=defineComponent({__name:"DropdownMenu",props:{...dropdownItemProps,...dropdownItemsProps},emits:["click:item"],setup(__props,{emit:__emit}){const emit=__emit,clickItem=item=>emit("click:item",item);return(_ctx,_cache)=>(openBlock(),createElementBlock("ul",_hoisted_1,[renderSlot(_ctx.$slots,"prepend"),renderSlot(_ctx.$slots,"items",{clickItem,items:_ctx.items},()=>[(openBlock(!0),createElementBlock(Fragment,null,renderList(_ctx.items,(item,index)=>renderSlot(_ctx.$slots,"item",{key:`item-${index.toString()}`,clickItem,item},()=>[createVNode(unref(_sfc_main$2),mergeProps(item,{"item-class":_ctx.itemClass,onClick:$event=>clickItem(item)}),null,16,["item-class","onClick"])])),128))]),renderSlot(_ctx.$slots,"append")]))}});_sfc_main$1.__docgenInfo={exportName:"default",displayName:"DropdownMenu",docsBlocks:[`\`\`\`vue
<DropdownMenu :items="[Item]" />
\`\`\`

## Imported Props

| Prop name | Description                    | Type                                         | Values | Default  |
| --------- | ------------------------------ | -------------------------------------------- | ------ | -------- |
| items     | The items of the dropdown menu | [Item[]](../../composables/useDropdownItems) | -      | () => [] |`],description:"",tags:{},events:[{name:"click:item",description:"Fired when an item is clicked",properties:[{type:{names:["Item"]},name:"item",description:"The item that was clicked"}],tags:[{title:"param",type:{name:"Item"},name:"item",description:"The item that was clicked"}]}],slots:[{name:"prepend",description:"Prepends the dropdown menu"},{name:"items",scoped:!0,description:"Displays content inside the dropdown menu",bindings:[{title:"binding",type:{name:"function"},name:"click-item",description:"The function to call when an item is clicked"},{title:"binding",type:{name:"array"},name:"items",description:"The `Item` list"}]},{name:"item",scoped:!0,description:"Displays the dropdown menu item",bindings:[{title:"binding",type:{name:"function"},name:"click-item",description:"The function to call when an item is clicked"},{title:"binding",type:{name:"object"},name:"item",description:"The `Item` object"}]},{name:"append",description:"Appends the dropdown menu"}],sourceFiles:["/home/runner/work/bootstrap-vue/bootstrap-vue/src/components/DropdownMenu/DropdownMenu.vue"]};const dropdownProps={...dropdownItemsProps,menuClass:{type:String,default:void 0},...sizeProps,toggleClass:{type:[String,Array,Object],default:void 0},...variantProps},dropdownEvents=["show","shown","hide","hidden"],_sfc_main=defineComponent({__name:"Dropdown",props:{...dropdownItemProps,...dropdownProps},setup(__props,{expose:__expose,emit:__emit}){const emit=__emit,dropdown=ref();useBootstrapEmits(dropdown,dropdownEvents,emit,"dropdown");const{bsInstance:bsDropdown}=useBootstrapInstance("Dropdown",dropdown);return __expose({bsDropdown}),(_ctx,_cache)=>(openBlock(),createElementBlock("div",{ref_key:"dropdown",ref:dropdown,class:"dropdown"},[renderSlot(_ctx.$slots,"dropdownToggle",{},()=>[createVNode(unref(_sfc_main$3),{class:normalizeClass(["dropdown-toggle",_ctx.toggleClass]),"data-bs-toggle":"dropdown",size:_ctx.size,variant:_ctx.variant},{default:withCtx(()=>[renderSlot(_ctx.$slots,"default",{},()=>[createTextVNode(" Select ")])]),_:3},8,["class","size","variant"])]),renderSlot(_ctx.$slots,"dropdownMenu",mergeProps({"onClick:item":_ctx.$attrs["onClick:item"]},{items:_ctx.items}),()=>[createVNode(unref(_sfc_main$1),mergeProps({items:_ctx.items,class:_ctx.menuClass,"item-class":_ctx.itemClass},{"onClick:item":_ctx.$attrs["onClick:item"]}),{prepend:withCtx(slotScope=>[renderSlot(_ctx.$slots,"prepend",normalizeProps(guardReactiveProps(slotScope)))]),items:withCtx(slotScope=>[renderSlot(_ctx.$slots,"items",normalizeProps(guardReactiveProps(slotScope)))]),item:withCtx(slotScope=>[renderSlot(_ctx.$slots,"item",normalizeProps(guardReactiveProps(slotScope)))]),append:withCtx(slotScope=>[renderSlot(_ctx.$slots,"append",normalizeProps(guardReactiveProps(slotScope)))]),_:3},16,["items","class","item-class"])])],512))}});_sfc_main.__docgenInfo={exportName:"default",displayName:"Dropdown",docsBlocks:[`\`\`\`vue
<Dropdown :items="[Item]" />
\`\`\`

## Imported Props

| Prop name | Description                                    | Type                                             | Values | Default   |
| --------- | ---------------------------------------------- | ------------------------------------------------ | ------ | --------- |
| items     | The items of the dropdown menu                 | [Item[]](../../composables/useDropdownItems)     | -      | () => []  |
| menuClass | The classes that will be forwarded to the menu | \`string\`\\|\`array\`\\|\`object\`                      | -      | undefined |
| size      | The size of the component                      | [Size](../../composables/useSize) (string)       | -      | 'md'      |
| variant   | The variant of the component                   | [Variant](../../composables/useVariant) (string) | -      | 'primary' |

<!-- TODO Auto-generate based on type? -->
## Events

| Name   | Args | Description                                                                                        |
| ------ | ---- | -------------------------------------------------------------------------------------------------- |
| show   |      | Fires immediately when the \`show\` instance method is called                                        |
| shown  |      | Fired when the dropdown has been made visible to the user and CSS transitions have completed       |
| hide   |      | Fires immediately when the \`hide\` instance method has been called                                  |
| hidden |      | Fired when the dropdown has finished being hidden from the user and CSS transitions have completed |`],description:"",tags:{},expose:[{name:"bsDropdown"}],slots:[{name:"dropdownToggle",description:"Displays the dropdown toggle"},{name:"default",description:"Displays content inside the dropdown toggle"},{name:"dropdownMenu",scoped:!0,description:"Displays the dropdown menu",bindings:[{name:'"onClick:item"',title:"binding"},{title:"binding",type:{name:"array"},name:"items",description:"The `Item` list"}]},{name:"prepend",scoped:!0,description:"*Forwarded to child*",bindings:[]},{name:"items",scoped:!0,description:"*Forwarded to child*",bindings:[]},{name:"item",scoped:!0,description:"*Forwarded to child*",bindings:[]},{name:"append",scoped:!0,description:"*Forwarded to child*",bindings:[]}],sourceFiles:["/home/runner/work/bootstrap-vue/bootstrap-vue/src/components/Dropdown/Dropdown.vue"]};export{_sfc_main as _,_sfc_main$1 as a,_sfc_main$2 as b,dropdownProps as d};
