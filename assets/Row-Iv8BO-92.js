import{c as computed,u as unref,e as defineComponent,A as toRef,f as openBlock,g as createElementBlock,j as renderSlot,n as normalizeClass,p as createBlock,w as withCtx,z as resolveDynamicComponent}from"./vue.esm-bundler-9Sp9mUIa.js";import{u as useClasses}from"./index-tXmoVe_N.js";import{u as useStringTemplate,t as templateString}from"./index-axguP7UP.js";const breakpoints=["sm","md","lg","xl","xxl"],useBreakpoints=(props,classTemplate)=>{const breakpointClasses=computed(()=>breakpoints.map(b=>useStringTemplate(classTemplate,[b,unref(props[b])]).templatedString.value));return{breakpointClasses:useClasses(breakpointClasses).classes}},breakpointProps=(propTemplate,template="{0}")=>Object.fromEntries(breakpoints.map(b=>[templateString(template,b),propTemplate])),colProp={type:[Number,String],default:void 0,validator:c=>c==="auto"||c===""||c>0&&c<=12},propsCol$1=breakpointProps(colProp),propsOffset=breakpointProps(colProp,"offset-{0}"),propsOrder=breakpointProps(colProp,"order-{0}"),_sfc_main$2=defineComponent({__name:"Col",props:{cols:colProp,...propsCol$1,offset:colProp,...propsOffset,order:colProp,...propsOrder},setup(__props){const props=__props,colProps={sm:toRef(props,"sm"),md:toRef(props,"md"),lg:toRef(props,"lg"),xl:toRef(props,"xl"),xxl:toRef(props,"xxl")},colClass=computed(()=>props.cols?useStringTemplate("col-{0}",props.cols).templatedString.value:"col"),colClasses=computed(()=>useBreakpoints(colProps,"col-{0}-{1}").breakpointClasses.value.map(c=>c.replace(/\-$/,""))),offsetProps={sm:toRef(props,"offsetSm"),md:toRef(props,"offsetMd"),lg:toRef(props,"offsetLg"),xl:toRef(props,"offsetXl"),xxl:toRef(props,"offsetXxl")},offsetClass=computed(()=>useStringTemplate("offset-{0}",props.offset).templatedString.value),offsetClasses=useBreakpoints(offsetProps,"offset-{0}-{1}").breakpointClasses,orderProps={sm:toRef(props,"orderSm"),md:toRef(props,"orderMd"),lg:toRef(props,"orderLg"),xl:toRef(props,"orderXl"),xxl:toRef(props,"orderXxl")},orderClass=computed(()=>useStringTemplate("order-{0}",props.order).templatedString.value),orderClasses=useBreakpoints(orderProps,"order-{0}-{1}").breakpointClasses,{classes}=useClasses(computed(()=>[colClass.value,...colClasses.value,offsetClass.value,...offsetClasses.value,orderClass.value,...orderClasses.value]));return(_ctx,_cache)=>(openBlock(),createElementBlock("div",{class:normalizeClass(unref(classes))},[renderSlot(_ctx.$slots,"default")],2))}});_sfc_main$2.__docgenInfo={exportName:"default",displayName:"Col",docsBlocks:['```vue\n<Col\n    cols="10"\n    sm="8"\n    md="6"\n    offset="1"\n    offset-sm="2"\n    offset-md="3"\n>\n    I am a column\n</Col>\n```\n\n## Imported Props\n\n| Prop name    | Description                                                                   | Type            | Values | Default   |\n| ------------ | ----------------------------------------------------------------------------- | --------------- | ------ | --------- |\n| cols[size]   | The amount of cols the column should span. Results in `.col-[size]-*`         | `int`\\|`string` | -      | undefined |\n| offset[Size] | The amount of cols the column should be offset. Results in `.offset-[size]-*` | `int`\\|`string` | -      | undefined |\n| order[Size]  | The position in order of the column. Results in `.order-[size]-*`             | `int`\\|`string` | -      | undefined |'],description:"",tags:{},props:[{name:"cols",description:"The amount of cols the column should span. Results in: `.col-*`",type:{name:"colProp"}},{name:"offset",description:"The amount of cols the column should be offset. Results in `.offset-*`",type:{name:"colProp"}},{name:"order",description:"The position in order of the column. Results in `.order-*`",type:{name:"colProp"}}],slots:[{name:"default",description:"Displays content inside the col"}],sourceFiles:["/home/runner/work/bootstrap-vue/bootstrap-vue/src/components/Col/Col.vue"]};const _sfc_main$1=defineComponent({__name:"Container",props:{fluid:{type:Boolean,default:!1}},setup(__props){const props=__props,{classes}=useClasses(computed(()=>[`container${props.fluid?"-fluid":""}`]));return(_ctx,_cache)=>(openBlock(),createElementBlock("div",{class:normalizeClass(unref(classes))},[renderSlot(_ctx.$slots,"default")],2))}});_sfc_main$1.__docgenInfo={exportName:"default",displayName:"Container",docsBlocks:[`\`\`\`vue
<Container>
    <Row>
        <Col>
            <h1>Hello World</h1>
        </Col>
    </Row>
</Container>
\`\`\``],description:"",tags:{},props:[{name:"fluid",description:"Uses the `container-fluid` class",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],slots:[{name:"default",description:"Displays content inside the container"}],sourceFiles:["/home/runner/work/bootstrap-vue/bootstrap-vue/src/components/Container/Container.vue"]};const aligns=["baseline","center","end","start","stretch"],alignProp={type:String,default:void 0,validator:a=>aligns.includes(a)},gutterProp={type:[Number,String],default:void 0},justifies=["around","between","center","end","evenly","start"],justifyProp={type:String,default:void 0,validator:j=>justifies.includes(j)},tagProps={tag:{type:String,default:"div"}},propsAlign=breakpointProps(alignProp,"align-{0}"),propsCol=breakpointProps(colProp,"cols-{0}"),propsGutters=breakpointProps(gutterProp,"gutters-{0}"),propsGuttersX=breakpointProps(gutterProp,"gutters-x-{0}"),propsGuttersY=breakpointProps(gutterProp,"gutters-y-{0}"),propsJustify=breakpointProps(justifyProp,"justify-{0}"),_sfc_main=defineComponent({__name:"Row",props:{align:alignProp,...propsAlign,cols:colProp,...propsCol,gutters:gutterProp,...propsGutters,guttersX:gutterProp,...propsGuttersX,guttersY:gutterProp,...propsGuttersY,justify:justifyProp,...propsJustify,...tagProps},setup(__props){const props=__props,alignProps={sm:toRef(props,"alignSm"),md:toRef(props,"alignMd"),lg:toRef(props,"alignLg"),xl:toRef(props,"alignXl"),xxl:toRef(props,"alignXxl")},alignClass=useStringTemplate("align-items-{0}",props.align).templatedString,alignClasses=useBreakpoints(alignProps,"align-items-{0}-{1}").breakpointClasses,colProps={sm:toRef(props,"colsSm"),md:toRef(props,"colsMd"),lg:toRef(props,"colsLg"),xl:toRef(props,"colsXl"),xxl:toRef(props,"colsXxl")},colClass=useStringTemplate("row-cols-{0}",props.cols).templatedString,colClasses=useBreakpoints(colProps,"row-cols-{0}-{1}").breakpointClasses,guttersProps={sm:toRef(props,"guttersSm"),md:toRef(props,"guttersMd"),lg:toRef(props,"guttersLg"),xl:toRef(props,"guttersXl"),xxl:toRef(props,"guttersXxl")},guttersClass=useStringTemplate("g-{0}",props.gutters).templatedString,guttersClasses=useBreakpoints(guttersProps,"g-{0}-{1}").breakpointClasses,guttersXProps={sm:toRef(props,"guttersXSm"),md:toRef(props,"guttersXMd"),lg:toRef(props,"guttersXLg"),xl:toRef(props,"guttersXXl"),xxl:toRef(props,"guttersXXxl")},guttersXClass=useStringTemplate("gx-{0}",props.guttersX).templatedString,guttersXClasses=useBreakpoints(guttersXProps,"gx-{0}-{1}").breakpointClasses,guttersYProps={sm:toRef(props,"guttersYSm"),md:toRef(props,"guttersYMd"),lg:toRef(props,"guttersYLg"),xl:toRef(props,"guttersYXl"),xxl:toRef(props,"guttersYXxl")},guttersYClass=useStringTemplate("gy-{0}",props.guttersY).templatedString,guttersYClasses=useBreakpoints(guttersYProps,"gy-{0}-{1}").breakpointClasses,justifyProps={sm:toRef(props,"justifySm"),md:toRef(props,"justifyMd"),lg:toRef(props,"justifyLg"),xl:toRef(props,"justifyXl"),xxl:toRef(props,"justifyXxl")},justifyClass=useStringTemplate("justify-content-{0}",props.justify).templatedString,justifyClasses=useBreakpoints(justifyProps,"justify-content-{0}-{1}").breakpointClasses,{classes}=useClasses(computed(()=>[alignClass.value,...alignClasses.value,colClass.value,...colClasses.value,guttersClass.value,...guttersClasses.value,guttersXClass.value,...guttersXClasses.value,guttersYClass.value,...guttersYClasses.value,justifyClass.value,...justifyClasses.value]));return(_ctx,_cache)=>(openBlock(),createBlock(resolveDynamicComponent(_ctx.tag),{class:normalizeClass(["row",unref(classes)])},{default:withCtx(()=>[renderSlot(_ctx.$slots,"default")]),_:3},8,["class"]))}});_sfc_main.__docgenInfo={exportName:"default",displayName:"Row",docsBlocks:['```vue\n<Row\n    align-sm="center"\n    align-xl="start"\n    row-cols\n>\n    <Col>...</Col>\n\n    <Col>...</Col>\n</Row>\n```\n\n## Imported Props\n\n| Prop name      | Description                                                                       | Type            | Values | Default   |\n| -------------- | --------------------------------------------------------------------------------- | --------------- | ------ | --------- |\n| align[Size]    | The alignment of the children. Results in `.align-items-[size]-*`                 | `string`        | -      | undefined |\n| cols[Size]     | The amount of cols the column should span. Results in `.row-cols-[size]-*`        | `int`\\|`string` | -      | undefined |\n| gutters[Size]  | The amount of cols the column should span. Results in `.g-[size]-*`               | `int`\\|`string` | -      | undefined |\n| guttersX[Size] | The amount of cols the column should span. Results in `.g-x-[size]-*`             | `int`\\|`string` | -      | undefined |\n| guttersY[Size] | The amount of cols the column should span. Results in `.g-y-[size]-*`             | `int`\\|`string` | -      | undefined |\n| justify[Size]  | The amount of cols the column should span. Results in `.justify-content-[size]-*` | `string`        | -      | undefined |\n| tag            | The html tag that will be used for the component                                  | `string`        | -      | \'div\'     |'],description:"",tags:{},props:[{name:"align",type:{name:"alignProp"}},{name:"cols",type:{name:"colProp"}},{name:"gutters",type:{name:"gutterProp"}},{name:"guttersX",type:{name:"gutterProp"}},{name:"guttersY",type:{name:"gutterProp"}},{name:"justify",type:{name:"justifyProp"}}],slots:[{name:"default",description:"Displays content inside the row"}],sourceFiles:["/home/runner/work/bootstrap-vue/bootstrap-vue/src/components/Row/Row.vue"]};export{_sfc_main$2 as _,_sfc_main$1 as a,breakpoints as b,_sfc_main as c,aligns as d,justifies as j};
